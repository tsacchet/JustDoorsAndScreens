@model JustDoorsAndScreens.vwQuoteReport

@{
    ViewBag.Title = "QuoteDetails";
}

<style>
    .ui-jqgrid tr.jqgrow td {
        height: 40px;
    }

    .text-large {
        font-size: 120%;
    }

    .ui-jqgrid tr.ui-jqgrid-labels div {
        white-space: normal !important;
    }
</style>

@*<h3 class="text-primary">Just Doors And Screens <strong class="text-success">Quotation</strong></h3>*@


<div class="card border border-dark shadow">

    <div class="card-header bg-light border-dark sticky-top">

        @{string dt = Model.Date.ToString();}
        @*<div class="mx-auto"><h4><strong>Quote Date : </strong><strong class="text-warning">@dt.Substring(0, 10)</strong></h4></div>*@

        <div class="clearfix">
            <span class="float-left"><h4 class="text-dark"><strong>Quotation</strong></h4></span>

            <span class="float-right"><strong class="small">Date : </strong><strong class="small text-dark">@dt.Substring(0, 10)</strong> &nbsp;<strong>QuoteID: </strong> <strong class="text-warning"> @Html.DisplayFor(model => model.QuoteID)</strong></span>
        </div>

        <div class="clearfix">
            <span class="float-left"><strong>Customer : </strong> <strong class="text-warning"> @Html.DisplayFor(model => model.Customer)</strong></span>
            <span class="float-right"><a href='@Url.Action("Edit/" + Model.QuoteID, "Quotes")' id="" class="btn btn-danger btn-sm border-dark shadow"><i class="fa fa-edit"></i> Edit</a> <a href='@Url.Action("SendEmailTo/" + Model.QuoteID, "Quotes")' id="" class="btn btn-primary btn-sm border-dark shadow" onclick="$('#myModal').modal('show');"><i class="fa fa-envelope"></i> Email</a></span>
        </div>

    </div>

    <div class="card-body">

        @*<img class="img-fluid mx-auto d-block" src="~/images/JustDoorsAndScreenTitle.PNG" />*@



        @*<div class="row">

                <div class="col-sm-4">
                    <h6>
                        <strong>Quote ID : </strong>
                        <strong class="text-warning">@Html.DisplayFor(model => model.QuoteID)</strong>

                    </h6>
                </div>

                <div class="col-sm-4">
                    <h6>
                        <strong>Customer : </strong>
                        <strong class="text-warning">@Html.DisplayFor(model => model.Customer)</strong>
                    </h6>
                </div>

                <div class="col-sm-4">
                    <h6>
                        @{string dt = Model.Date.ToString();}
                        <strong>Quote Date : </strong>
                        <strong class="text-warning">@dt.Substring(0, 10)</strong>
                    </h6>
                </div>

            </div>*@


        <div class="row">

            <div class="col-sm-4">
                <h6>
                    <strong>Telephone : </strong>
                    @*<strong class="text-warning">@Html.DisplayFor(model => model.Telephone)</strong>*@
                    <a href="tel:{@Html.DisplayFor(model => model.Telephone)}">@Html.DisplayFor(model => model.Telephone)</a>
                </h6>
            </div>

            <div class="col-sm-4">
                <h6>
                    <strong>Mobile : </strong>
                    @*<label id="MobileNo"><strong class="text-warning">@Html.DisplayFor(model => model.Mobile)</strong></label>*@
                    @*<a href="tel:+{@Html.DisplayFor(model => model.Mobile)}">@Html.DisplayFor(model => model.Mobile)</a>*@
                    <a href="tel:{@Html.DisplayFor(model => model.Mobile)}">@Html.DisplayFor(model => model.Mobile)</a>
                </h6>
            </div>

            <div class="col-sm-4">
                <h6>
                    <strong>Email : </strong>
                    <strong class="text-warning">@Html.DisplayFor(model => model.Email)</strong>
                </h6>
            </div>

        </div>


        <div class="row">

            <div class="col-sm-4">
                <h6>
                    <strong>Deposit : </strong>
                    <strong class="text-warning">@Html.DisplayFor(model => model.Deposit)</strong>
                </h6>
            </div>

            <div class="col-sm-4">
                <h6>
                    <strong>Total Cost : </strong>
                    <strong class="text-success">@Html.DisplayFor(model => model.TotalCost)</strong>
                </h6>
            </div>

            <div class="col-sm-4">
                <h6>
                    <strong>Balance : </strong>
                    <strong class="text-danger">@Html.DisplayFor(model => model.Balance)</strong>
                </h6>
            </div>

        </div>



        <div class="row">

            <div class="col-sm-4">
                <h6>
                    <strong>Stage : </strong>
                    <strong class="text-warning">@Html.DisplayFor(model => model.Stage)</strong>
                </h6>
            </div>

            <div class="col-sm-4">
                <h6>
                    <strong>Address : </strong>
                    <strong class="text-warning">@Html.DisplayFor(model => model.Address)</strong>
                </h6>
            </div>

            <div class="col-sm-4">

                <div class="checkbox">
                    <h6>
                        <strong>Paid : </strong>
                        <strong class="text-warning">@Html.DisplayFor(model => model.Paid)</strong>
                    </h6>
                </div>



            </div>

        </div>

    </div>
    <div class="card-footer bg-light border ">

        <a href='@Url.Action("Index", "Quotes")' id="" class="btn btn-success border-dark shadow"><i class="fa fa-arrow-circle-left"></i> Quotes</a>



        <a href='@Url.Action("QuoteDetailsPDF/" + Model.QuoteID, "Quotes")' id="" class="btn btn-outline-secondary shadow"><i class="fa fa-file-text"></i> View</a>


        @*Customer*@


        <a href='@Url.Action("PrintPDF/" + Model.QuoteID, "Quotes")' id="" class="btn btn-secondary shadow"><i class="fa fa-cloud-download"></i> Download</a>





        @*Supplier*@
        @*<div class="bg-light border-dark sticky-top">*@
        <div class="input-group mt-3 mb-3">
            <div class="input-group-prepend">
                <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-toggle="dropdown">
                    Supplier
                </button>
                <div class="dropdown-menu" id="suppliers">
                    <a class="dropdown-item" href="#" onclick="$('#supp').val('tony_sacchetta@hotmail.com');">Tony</a>
                    <a class="dropdown-item" href="#" onclick="$('#supp').val('catrina_sacchetta@hotmail.com');">Catrina</a>
                    <a class="dropdown-item" href="#" onclick="$('#supp').val('giannina_sacchetta@hotmail.com');">Giannina</a>
                </div>
            </div>
            <input type="text" class="form-control" placeholder="email address" id="supp">
            <div class="input-group-append">
                <button class="btn btn-success" type="button" onclick="$('#myModal').modal('show');SendEmailToSupp();">Email</button>
            </div>
        </div>


    </div>





    <div class="form-inline p-2">

        <a href='@Url.Action("CreateDoorItem/" + Model.QuoteID, "DoorItems")' id="" class="btn btn-primary shadow rounded-circle"><i class="fa fa-plus"></i></a>

        <div class="mx-auto"><h4><strong>Door Items</strong></h4></div>
    </div>

    <div class="form-inline p-2">
        <div class="table-responsive border card border-dark shadow">
            <table id="grid1b" class="ui-jqgrid text-large"></table>
        </div>
    </div>

    <br />

    <div class="form-inline p-2">

        <a href='@Url.Action("CreateSliderItem/" + Model.QuoteID, "DoorItems")' id="" class="btn btn-primary shadow rounded-circle"><i class="fa fa-plus"></i></a>

        <div class="mx-auto"><h4><strong>Slider Items</strong></h4></div>
    </div>

    <div class="form-inline p-2">
        <div class="table-responsive border card border-dark shadow">
            <table id="grid3b" class="ui-jqgrid text-large"></table>
        </div>
    </div>

    <br />


    <div class="form-inline p-2">
        @*@Html.ActionLink("Add FlyScreen", "CreateFlyScreenItem/" + Model.QuoteID, "FlyScreenItems", null, new { @class = "btn btn-primary" })*@
        <a href='@Url.Action("CreateFlyScreenItem/" + Model.QuoteID, "FlyScreenItems")' id="" class="btn btn-primary shadow rounded-circle"><i class="fa fa-plus"></i></a>

        <div class="mx-auto"><h4><strong>FlyScreen Items</strong></h4></div>
    </div>

    <div class="form-inline p-2">
        <div class="table-responsive border card border-dark shadow">
            <table id="grid2b" class="ui-jqgrid text-large"></table>
        </div>
    </div>


</div>

    <br />







    <!-- The Modal for submit page-->
    <div class="modal fade" id="myModal">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header bg-danger text-white">
                    <h4 class="modal-title">Saving Data... <i class="fa fa-circle-o-notch fa-spin" style="font-size:24px"></i></h4>
                    @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                </div>

                <!-- Modal body -->
                <div class="modal-body bg-danger text-white">
                    Please waiting while data is saved..
                </div>

                <!-- Modal footer -->
                <div class="modal-footer bg-danger text-white">
                    @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>*@
                </div>

            </div>
        </div>
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script>
            $("#myform").submit(function () {
                //$("#WaitDialog").modalDialog();
                $('#myModal').modal('show');
            });
        </script>


        <script>
        // ********************************************************************************
    // * Document loaded completed Trigger
    // ********************************************************************************
    $(document).ready(function () {
        GenerateDoorTable();
        GenerateSliderTable();
        GenerateFlyScreenTable();
        GetSuppliers();
    });

        function GetSuppliers() {

        @*$.ajax({
            "url": "@(Url.Action("GetSuppliers", "Quotes"))",
            "type": "POST",
            "datatype": "json",
            //"contentType": "application/json; charset=utf-8",
            data: { },
            success: function (response) {
                retData = response.data;
                console.log('GetSuppliers: ' + retData);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("GetSuppliers Status: " + textStatus); alert("GetSuppliers Error: " + errorThrown);
            }
            });*@


            $.ajax({
                url: "@(Url.Action("GetSuppliers", "Quotes"))",
                type: "POST",
                datatype: "json",
                //contentType: "application/json; charset=utf-8",
                data: {},
                success: function (response) {
                    retData = response.data;
                    console.log('Suppliers:' + retData);
                    //alert(retData)
                    $("#suppliers").empty();
                    $.each(retData, function (i, mchbrd) {
                        var name = mchbrd.SupplierName;
                        var email = mchbrd.SupplierEmail;
                        console.log(name);
                        console.log(email);

                        //<a class="dropdown-item" href="#" onclick="$('#supp').val('giannina_sacchetta@hotmail.com');">Giannina</a>
                        var add = '<a class="dropdown-item" href="#" onclick="$(*#supp*).val(*Email*);">Name</a>';
                        console.log(add);
                        add = add.replace("Name", name);
                        console.log(add);
                        add = add.replace("*#supp*", "'#supp'");
                        console.log(add);
                        add = add.replace("*Email*", "'"+email+"'");
                        console.log(add);
                        $("#suppliers").append(add);
                    });

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("GetSuppliers Status: " + textStatus); alert("GetSuppliers Error: " + errorThrown);
                }
            });



    };



        function SendEmailToSupp() {
            var email = $("#supp").val();

            $.ajax({
                "url": "@(Url.Action("SendEmailToSupp", "Quotes"))",
                "type": "POST",
                "datatype": "json",
                //"contentType": "application/json; charset=utf-8",
                data: { QuoteID:  @Model.QuoteID, Email: email},
                success: function (response) {
                    retData = response.data;
                    console.log('SendEmailToSupp: ' + retData);
                    $('#myModal').modal('hide');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("GenerateDoorTable Status: " + textStatus); alert("GenerateDoorTable Error: " + errorThrown);
                }
            });
        };

    function GenerateDoorTable() {
        $.ajax({
            "url": "@(Url.Action("GetDoors", "Quotes"))",
            "type": "POST",
            "datatype": "json",
            //"contentType": "application/json; charset=utf-8",
            data: { Quote:  @Model.QuoteID},
            success: function (response) {
                retData = response.data;
                console.log('GetList: ' + retData);
                DisplayDoorTable(retData);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("GenerateDoorTable Status: " + textStatus); alert("GenerateDoorTable Error: " + errorThrown);
            }
        });
        };

    function GenerateSliderTable() {
        $.ajax({
            "url": "@(Url.Action("GetSliders", "Quotes"))",
            "type": "POST",
            "datatype": "json",
            //"contentType": "application/json; charset=utf-8",
            data: { Quote:  @Model.QuoteID},
            success: function (response) {
                retData = response.data;
                console.log('GetList: ' + retData);
                DisplaySliderTable(retData);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("GenerateSliderTable Status: " + textStatus); alert("GenerateSliderTable Error: " + errorThrown);
            }
        });
     };

    function GenerateFlyScreenTable() {
        $.ajax({
            "url": "@(Url.Action("GetFlyScreens", "Quotes"))",
            "type": "POST",
            "datatype": "json",
            //"contentType": "application/json; charset=utf-8",
            data: { Quote:  @Model.QuoteID},
            success: function (response) {
                retData = response.data;
                console.log('GetList: ' + retData);
                DisplayFlyScreenTable(retData);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("GenerateFlyScreenTable Status: " + textStatus); alert("GenerateFlyScreenTable Error: " + errorThrown);
            }
        });
    };

    function DisplayDoorTable(json) {
        //"use strict";
        $("#grid1b").jqGrid("GridUnload")
        //$('grid1b').css('font-size', '20px');
        $("#grid1b").jqGrid({
        colModel: [
        { name: "act", template: "actions", align: "left", width: 80 },

        //{
        //    name: "Type", label: "Type", width: 53,

        //    formatter: "select",
        //    formatoptions: { value: "Flat:Flat;Rotary:Rotary", defaultValue: "Flat" },
        //    stype: "select",
        //    searchoptions: { value: ":Any;Flat:Flat;Rotary:Rotary" }
        //},
        //{
        ////    name: "invdate", label: "Date", width: 90, align: "center", sorttype: "date",*
        ////    formatter: "date", formatoptions: { newformat: "d-M-Y" },
        ////    searchoptions: { sopt: ["eq"] }
        //},

            { name: "id", label: "ID", width: 60 },
            //{ name: "QuoteID", label: "QuoteID", width: 30 },
            { name: "Description", label: "Description", width: 200 },
            { name: "ColorTypeName", label: "ColorType", width: 100 },
            { name: "LockTypeName", label: "LockType", width: 100 },
            { name: "LockHeight", label: "LockHeight", width: 100 },
            { name: "DoorTypeName", label: "DoorType", width: 120 },
            { name: "DesignTypeName", label: "DesignType", width: 120 },
            { name: "Height", label: "Height", width: 100 },
            { name: "Width1", label: "Width1", width: 100 },
            { name: "Width2", label: "Width2", width: 100 },
            { name: "Width3", label: "Width3", width: 100 },
            //{ name: "SliderTopTrack", label: "SliderTopTrack", width: 20, template: "booleanCheckbox", firstsortorder: "desc" },
            //{ name: "SliderBottomTrack", label: "SliderBottomTrack", width: 20, template: "booleanCheckbox", firstsortorder: "desc" },
            //{ name: "SliderSideChannel", label: "SliderSideChannel", width: 20, template: "booleanCheckbox", firstsortorder: "desc" },
            //{ name: "SliderFs", label: "SliderFs", width: 20, template: "booleanCheckbox", firstsortorder: "desc" },
            //{ name: "SliderZs", label: "SliderZs", width: 20 , template: "booleanCheckbox", firstsortorder: "desc" },
            //{ name: "SliderBugStrip", label: "SliderBugStrip", width: 20 , template: "booleanCheckbox", firstsortorder: "desc" },
            { name: "Cost", label: "Cost", width: 100 },


        ],
            data: json,
            //height: 450,
            caption: "",
            autowidth: true,
            guiStyle: "bootstrap",
            iconSet: "fontAwesome",
            //idPrefix: "gid_",
            shrinkToFit: false,
            rownumbers: true,
            sortname: "invdate",
            sortorder: "desc",
            threeStateSort: true,
            sortIconsBeforeText: true,
            headertitles: true,
            toppager: false,
            pager: false,
            rowNum: 10,
            viewrecords: true,
            searching: {
                defaultSearch: "cn"
        },
        actionsNavOptions: {
            editbutton: false,
            delbutton: false,
            custom: [
            {
            action: "open", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg","");
                window.location = '@Url.Action("DetailsDoorItem", "DoorItems")' + '?id=' + id;
                }
            },
            {
            action: "post", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg", "");
                window.location = '@Url.Action("EditDoorItem", "DoorItems")' + '?id=' + id;
                }
            },
            {
            action: "delete", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg", "");
                window.location = '@Url.Action("DeleteDoorItem", "DoorItems")' + '?id=' + id;
                }
            }
            ],
            posticon: "fa-pencil",
            posttitle: "Edit",
            openicon: "fa-folder-open-o",
            opentitle: "Details",
            deleteicon: "fa-trash",
            deletetitle: "Delete",
            isDisplayButtons: function (options, rowData) {
                if (options.rowData.closed) { // or rowData.closed
                return { post: { hidden: true }, del: { display: false } };
                }
            }
        },

        //loadComplete: function () {
        //    var rowIds = $('#grid1b').jqGrid('getDataIDs');
        //    for (var i = 0; i < rowIds.length; i++) {//iterate over each row
        //        rowData = $('#grid1b').jqGrid('getRowData', rowIds[i]);
        //        //set background style if ColValue === true\
        //        console.log('Stage: ' + rowData['Stage']);

        //        if (rowData['Stage'] === 'Completed') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-dark");
        //        }
        //        else if (rowData['Stage'] === 'Ordered') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-success");
        //        }
        //        else if (rowData['Stage'] === 'In Progress') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-warning");
        //        }
        //        else if (rowData['Stage'] === 'On Hold') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-danger");
        //        }
        //        else if (rowData['Stage'] === 'Canceled') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-dark");
        //        }

        //    } //for
        //}//loadComplete



        }).jqGrid();
    };


    function DisplaySliderTable(json) {
        //"use strict";
        $("#grid3b").jqGrid("GridUnload")
        //$('grid3b').css('font-size', '20px');
        $("#grid3b").jqGrid({
        colModel: [
        { name: "act", template: "actions", align: "left", width: 80 },

        //{
        //    name: "Type", label: "Type", width: 53,

        //    formatter: "select",
        //    formatoptions: { value: "Flat:Flat;Rotary:Rotary", defaultValue: "Flat" },
        //    stype: "select",
        //    searchoptions: { value: ":Any;Flat:Flat;Rotary:Rotary" }
        //},
        //{
        ////    name: "invdate", label: "Date", width: 90, align: "center", sorttype: "date",*
        ////    formatter: "date", formatoptions: { newformat: "d-M-Y" },
        ////    searchoptions: { sopt: ["eq"] }
        //},

            { name: "id", label: "ID", width: 60 },
            //{ name: "QuoteID", label: "QuoteID", width: 30 },
            { name: "Description", label: "Description", width: 200 },
            { name: "ColorTypeName", label: "ColorType", width: 100 },
            { name: "LockTypeName", label: "LockType", width: 100 },
            { name: "LockHeight", label: "LockHeight", width: 100 },
            { name: "DoorTypeName", label: "DoorType", width: 120 },
            { name: "DesignTypeName", label: "DesignType", width: 120 },
            { name: "Height", label: "Height", width: 100 },
            { name: "Width1", label: "Width", width: 100 },
            //{ name: "Width2", label: "Width2", width: 20 },
            //{ name: "Width3", label: "Width3", width: 20 },
            { name: "SliderTopTrackTypeName", label: "TopTrack", width: 100 },
            { name: "SliderTopTrackWidth", label: "TopTrack Width", width: 100 },

            { name: "SliderBottomTrackTypeName", label: "BottomTrack", width: 100 },
            { name: "SliderBottomTrackWidth", label: "BottomTrack Width", width: 100 },

            { name: "SliderSideChannelTypeName", label: "SideChannel", width: 100 },
            { name: "SliderSideChannelWidth", label: "SideChannel Width", width: 100 },

            { name: "F", label: "Fs Qty", width: 100 },
            { name: "Z", label: "Zs Qty", width: 100 },
            { name: "BugStrip", label: "BugStrip Qty", width: 100 },
            { name: "Cost", label: "Cost", width: 100 },


        ],
        data: json,
        //height: 450,
        caption: "",
        autowidth: true,
        guiStyle: "bootstrap",
        iconSet: "fontAwesome",
        //idPrefix: "gid_",
        shrinkToFit: false,
        rownumbers: true,
        sortname: "invdate",
        sortorder: "desc",
        threeStateSort: true,
        sortIconsBeforeText: true,
        headertitles: true,
        toppager: false,
        pager: false,
        rowNum: 10,
        viewrecords: true,
        searching: {
        defaultSearch: "cn"
        },
        actionsNavOptions: {
            editbutton: false,
            delbutton: false,
            custom: [
            {
            action: "open", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg","");
                window.location = '@Url.Action("DetailsSliderItem", "DoorItems")' + '?id=' + id;
                }
            },
            {
            action: "post", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg", "");
                window.location = '@Url.Action("EditSliderItem", "DoorItems")' + '?id=' + id;
                }
            },
            {
            action: "delete", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg", "");
                window.location = '@Url.Action("DeleteDoorItem", "DoorItems")' + '?id=' + id;
                }
            }
            ],
            posticon: "fa-pencil",
            posttitle: "Edit",
            openicon: "fa-folder-open-o",
            opentitle: "Details",
            deleteicon: "fa-trash",
            deletetitle: "Delete",
            isDisplayButtons: function (options, rowData) {
                if (options.rowData.closed) { // or rowData.closed
                return { post: { hidden: true }, del: { display: false } };
                }
            }
        },

        //loadComplete: function () {
        //    var rowIds = $('#grid1b').jqGrid('getDataIDs');
        //    for (var i = 0; i < rowIds.length; i++) {//iterate over each row
        //        rowData = $('#grid1b').jqGrid('getRowData', rowIds[i]);
        //        //set background style if ColValue === true\
        //        console.log('Stage: ' + rowData['Stage']);

        //        if (rowData['Stage'] === 'Completed') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-dark");
        //        }
        //        else if (rowData['Stage'] === 'Ordered') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-success");
        //        }
        //        else if (rowData['Stage'] === 'In Progress') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-warning");
        //        }
        //        else if (rowData['Stage'] === 'On Hold') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-danger");
        //        }
        //        else if (rowData['Stage'] === 'Canceled') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-dark");
        //        }

        //    } //for
        //}//loadComplete



        }).jqGrid();
    };





    function DisplayFlyScreenTable(json) {
        //"use strict";
        $("#grid2b").jqGrid("GridUnload")
        //$('grid2b').css('font-size', '20px');
        $("#grid2b").jqGrid({
        colModel: [
        { name: "act", template: "actions", align: "left", width: 80 },

        //{
        //    name: "Type", label: "Type", width: 53,

        //    formatter: "select",
        //    formatoptions: { value: "Flat:Flat;Rotary:Rotary", defaultValue: "Flat" },
        //    stype: "select",
        //    searchoptions: { value: ":Any;Flat:Flat;Rotary:Rotary" }
        //},
        //{
        ////    name: "invdate", label: "Date", width: 90, align: "center", sorttype: "date",*
        ////    formatter: "date", formatoptions: { newformat: "d-M-Y" },
        ////    searchoptions: { sopt: ["eq"] }
        //},

            { name: "id", label: "ID", width: 60 },
            //{ name: "QuoteID", label: "QuoteID", width: 30 },
            { name: "FlyScreenName", label: "FlyScreen", width: 180 },
            { name: "ColorTypeName", label: "Color Type", width: 100 },
            //{ name: "Width", label: "Width", width: 100 },
            //{ name: "Depth", label: "Depth", width: 100 },
            { name: "Qty", label: "Qty", width: 100 },
            { name: "Cost", label: "Cost Per Item", width: 120 },
            { name: "TotalCost", label: "Total Cost", width: 120 },

        ],
        data: json,
        //height: 450,
        caption: "",
        autowidth: true,
        guiStyle: "bootstrap",
        iconSet: "fontAwesome",
        //idPrefix: "gid_",
        shrinkToFit: false,
        rownumbers: true,
        sortname: "invdate",
        sortorder: "desc",
        threeStateSort: true,
        sortIconsBeforeText: true,
        headertitles: true,
        toppager: false,
        pager: false,
        rowNum: 10,
        viewrecords: true,
        searching: {
        defaultSearch: "cn"
        },
        actionsNavOptions: {
            editbutton: false,
            delbutton: false,
            custom: [
            {
            action: "open", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg","");
                window.location = '@Url.Action("DetailsFlyScreenItem", "FlyScreenItems")' + '?id=' + id;
                }
            },
            {
            action: "post", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg", "");
                window.location = '@Url.Action("EditFlyScreenItem", "FlyScreenItems")' + '?id=' + id;
                }
            },
            {
            action: "delete", position: "first",
            onClick: function (options) {
                var rid = options.rowid;
                var id = rid.replace("jqg", "");
                window.location = '@Url.Action("DeleteFlyScreenItem", "FlyScreenItems")' + '?id=' + id;
                }
            }
            ],
            posticon: "fa-pencil",
            posttitle: "Edit",
            openicon: "fa-folder-open-o",
            opentitle: "Details",
            deleteicon: "fa-trash",
            deletetitle: "Delete",
            isDisplayButtons: function (options, rowData) {
                if (options.rowData.closed) { // or rowData.closed
                return { post: { hidden: true }, del: { display: false } };
                }
            }
        },

        //loadComplete: function () {
        //    var rowIds = $('#grid1b').jqGrid('getDataIDs');
        //    for (var i = 0; i < rowIds.length; i++) {//iterate over each row
        //        rowData = $('#grid1b').jqGrid('getRowData', rowIds[i]);
        //        //set background style if ColValue === true\
        //        console.log('Stage: ' + rowData['Stage']);

        //        if (rowData['Stage'] === 'Completed') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-dark");
        //        }
        //        else if (rowData['Stage'] === 'Ordered') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-success");
        //        }
        //        else if (rowData['Stage'] === 'In Progress') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-warning");
        //        }
        //        else if (rowData['Stage'] === 'On Hold') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-danger");
        //        }
        //        else if (rowData['Stage'] === 'Canceled') {
        //            $('#grid1b').jqGrid('setRowData', rowIds[i], false, "text-white bg-dark");
        //        }

        //    } //for
        //}//loadComplete



        }).jqGrid();
    };


        </script>

    }
