@model JustDoorsAndScreens.FlyScreenItem

@{
    ViewBag.Title = "CreateFlyScreenItem";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.QuoteID, new { @Value = ViewBag.QuoteID })

    @Html.HiddenFor(model => model.Required, new { @Value = "1" })

    <div class="card border border-dark shadow">

        <div class="card-header bg-light border-dark sticky-top">
            <h3 class="text-dark"><strong>Create FlyScreen Item</strong></h3>
            <span class="text-dark text-sm-center"><strong>Customer:</strong> @ViewBag.Customer  <strong>Quote:</strong>  @ViewBag.QuoteID</span>
        </div>


        <div class="card-body row">

            <div class="col-sm-4">
                <h5>Details</h5>

                <div class="form-group">
                    <strong>@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })</strong>
                    @Html.TextAreaFor(model => model.Description, 5, 20, new { @class = "form-control", @id = "Description" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Required, new { id = "Required", Value = "True" })
                    <div class="checkbox icheck-alizarin">
                        <input type="checkbox" id="required" name="prepresssnewartwork" onclick="CheckBoxChange();" />
                        <label for="required" class="control-label">@Html.LabelFor(model => model.Required)</label>
                    </div>
                </div>

            </div>


            <div class="col-sm-4">
                <h5>FlyScreen Details</h5>
                <hr class="bg-dark" />

                <div class="form-group">
                    <strong>@Html.LabelFor(model => model.FlyScreenTypeID, "FlyScreenTypeID", htmlAttributes: new { @class = "control-label" })</strong>
                    @Html.DropDownList("FlyScreenTypeID", null, "--Select FlyScreenType--", htmlAttributes: new { @class = "form-control", @id = "DoorType", @onchange = "ChangeDoorType();" })
                    @Html.ValidationMessageFor(model => model.FlyScreenTypeID, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <strong>@Html.LabelFor(model => model.ColorTypeID, "ColorTypeID", htmlAttributes: new { @class = "control-label" })</strong>
                    @Html.DropDownList("ColorTypeID", null, "--Select ColourType--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ColorTypeID, "", new { @class = "text-danger" })
                </div>

                @*<div class="form-group">
                        <strong>@Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label" })</strong>
                        @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                    </div>*@

                <div class="form-group">
                    <strong class="text-danger">Cost Per Item</strong>
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "border-danger form-control", @id = "COST", @Value = "0", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-sm-6">
                            <strong>Cost Per Item</strong>
                            @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "QTY", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-6">
                            <strong><label>Total Cost</label></strong>
                            <input type="text" class="form-control" id="TOT" style="width: 80px" readonly="readonly">
                        </div>
                    </div>
                </div>

                <h5>Details</h5>
                <hr class="bg-dark" />

                <img class="p-3 img-fluid" id="pic" src="~/images/flyscreen_pins.PNG" />

            </div>

            <div class="col-sm-4">
                <h5>Depth/Width</h5>
                <hr class="bg-dark" />

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Depth, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Depth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Depth, "", new { @class = "text-danger" })
                    </div>*@

                <h5><span class="ml-4">Width</span><span class="ml-5">Depth</span><span class="ml-5">Qty</span></h5>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W1, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W1, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D1, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D1, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q1, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q1", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q1, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W2, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D2, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D2, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q2, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q2", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q2, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W3, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W3, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D3, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D3, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q3, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q3", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q3, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W4, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W4, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D4, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D4, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q4, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q4", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q4, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W5, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W5, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D5, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D5, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q5, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q5", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q5, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W6, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W6, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D6, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D6, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q6, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q6", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q6, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W7, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W7, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D7, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D7, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q7, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q7", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q7, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W8, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W8, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D8, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D8, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q8, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q8", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q8, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W9, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W9, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D9, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D9, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q9, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q9", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q9, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W10, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W10, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D10, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D10, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q10, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q10", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q10, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W11, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W11, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D11, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D11, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q11, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q11", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q11, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W12, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W12, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D12, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D12, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q12, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q12", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q12, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W13, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W13, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D13, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D13, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q13, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q13", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q13, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W14, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W14, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D14, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D14, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q14, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q14", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q14, "", new { @class = "text-danger" })
                </div>

                <div class="form-inline pb-1">
                    <strong>W</strong>&nbsp;
                    @Html.EditorFor(model => model.W15, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.W15, "", new { @class = "text-danger" }) &nbsp;

                    <strong>D</strong>&nbsp;
                    @Html.EditorFor(model => model.D15, new { htmlAttributes = new { @class = "form-control", style = "width: 80px" } })
                    @Html.ValidationMessageFor(model => model.D15, "", new { @class = "text-danger" })&nbsp;

                    <strong>Q</strong>&nbsp;
                    @Html.EditorFor(model => model.Q15, new { htmlAttributes = new { @class = "form-control", style = "width: 80px", @id = "Q15", @onchange = "AddQty();" } })
                    @Html.ValidationMessageFor(model => model.Q15, "", new { @class = "text-danger" })
                </div>

            </div>



        </div>







        <div class="card-footer">
            @*<input type="submit" value="Create" class="btn btn-primary" /> |*@
            <button type="submit" class="btn btn-primary border-dark shadow"><i class="fa fa-save"></i> Create</button>
            @*@Html.ActionLink("Back Details", "QuoteDetails", "Quotes", new { id = ViewBag.QuoteID }, new { @class = "btn btn-secondary" })*@
            <a href='@Url.Action("QuoteDetails/"+ ViewBag.QuoteID, "Quotes")' id="" class="btn btn-secondary border-dark shadow"><i class="fa fa-arrow-circle-left"></i> Back to Quote </a>

        </div>

    </div>
}



<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/icheck-bootstrap.css" rel="stylesheet" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>

    <script>

        // ********************************************************************************
        // * Document loaded completed Trigger
        // ********************************************************************************
        $(document).ready(function () {
            ChangeDoorType();
            AddQty();

            $('#required').prop('checked', true);
            $("#Required").val(true);

        });

        function CheckBoxChange() {
            if ($("#required").is(':checked')) $("#Required").val(true); else $("#Required").val(false);
        }

        function ChangeDoorType() {
            var picture = $("#DoorType :selected").text();

            picture = window.location.origin + '@Request.ApplicationPath' + '/images/' + picture + '.PNG';
            console.log('Picture :' + picture);
            $("#pic").attr("src", picture);
        }

        function AddQty() {
            var qty = 0;
            for (i = 1; i < 16; i++) {
                var v = $('#Q' + i).val();
                qty = Number(qty) + Number(v);
            }


            $('#QTY').val(qty);

            var cst = $('#COST').val();
            $('#TOT').val(Number(qty) * Number(cst));
        };

    </script>

}
